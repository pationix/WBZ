<DataGrid x:Class="WBZ.Modules.Logs.LogsListGrid"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:c="clr-namespace:WBZ.Controls"
          xmlns:g="clr-namespace:WBZ.Globals"
          xmlns:p="clr-namespace:WBZ.Properties"
          mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800"
          Margin="5" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" BorderThickness="1" AutoGenerateColumns="False">
    <DataGrid.ColumnHeaderStyle>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>
    </DataGrid.ColumnHeaderStyle>
    <DataGrid.Resources>
        <g:BindingProxy x:Key="proxy" Data="{Binding}"/>
    </DataGrid.Resources>
    <DataGrid.Columns>
        <!-- ID -->
        <DataGridTextColumn Binding="{Binding ID}" Header="ID" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_ID, Mode=OneWay, Converter={g:conv_BoolToVisibility}}"/>
        <!-- UserFullname -->
        <DataGridTextColumn Binding="{Binding UserFullname}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_UserFullname, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
            <DataGridTextColumn.Header>
                <c:DataGridColumnFilter_Text Text="Użytkownik" Value="{Binding Data.Filters.UserFullname, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
            </DataGridTextColumn.Header>
        </DataGridTextColumn>
        <!-- Module -->
        <DataGridTextColumn Binding="{Binding TranslatedModule}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Module, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
            <DataGridTextColumn.Header>
                <c:DataGridColumnFilter_Text Text="Nazwa modułu" Value="{Binding Data.Filters.Module, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
            </DataGridTextColumn.Header>
        </DataGridTextColumn>
        <!-- Instance -->
        <DataGridTextColumn Binding="{Binding Instance}" Header="ID instancji" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Obj, Mode=OneWay, Converter={g:conv_BoolToVisibility}}"/>
        <!-- Content -->
        <DataGridTextColumn Binding="{Binding Content}" Width="*" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Content, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
            <DataGridTextColumn.Header>
                <c:DataGridColumnFilter_Text Text="Treść" Value="{Binding Data.Filters.Content, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
            </DataGridTextColumn.Header>
        </DataGridTextColumn>
        <!-- DateTime -->
        <DataGridTextColumn Binding="{Binding DateTime, StringFormat={}{0:yyyy-MM-dd}}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_DateTime, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
            <DataGridTextColumn.Header>
                <c:DataGridColumnFilter_Date Text="Data i czas" Value1="{Binding Data.Filters.fDateTime, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" Value2="{Binding Data.Filters.DateTime, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
            </DataGridTextColumn.Header>
        </DataGridTextColumn>
    </DataGrid.Columns>
    <DataGrid.ContextMenu>
        <ContextMenu>
            <!-- Columns -->
            <MenuItem Header="Widoczność kolumn">
                <MenuItem.Icon>
                    <Image Source="/Resources/icon32_show.ico"/>
                </MenuItem.Icon>
                <MenuItem IsCheckable="True" Header="ID" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_ID, Mode=TwoWay}"/>
                <MenuItem IsCheckable="True" Header="Użytkownik" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_UserFullname, Mode=TwoWay}"/>
                <MenuItem IsCheckable="True" Header="Nazwa modułu" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Module, Mode=TwoWay}"/>
                <MenuItem IsCheckable="True" Header="ID obiektu" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Obj, Mode=TwoWay}"/>
                <MenuItem IsCheckable="True" Header="Treść" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Content, Mode=TwoWay}"/>
                <MenuItem IsCheckable="True" Header="Data i czas" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_DateTime, Mode=TwoWay}"/>
                <Separator/>
            </MenuItem>
            <!-- Sorting -->
            <MenuItem Header="Sortowanie danych">
                <MenuItem.Icon>
                    <Image Source="/Resources/icon32_descending.ico"/>
                </MenuItem.Icon>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Sortowanie 1:"/>
                            <ToggleButton IsChecked="{Binding sorting_LogsList[1], Source={x:Static p:Settings.Default}, Mode=TwoWay}" Height="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=2.2}" Width="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=2.2}">
                                <Image Margin="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=0.1}" Source="/Resources/icon32_descending.ico"/>
                            </ToggleButton>
                            <ComboBox SelectedValue="{Binding sorting_LogsList[0], Source={x:Static p:Settings.Default}, Mode=TwoWay}" SelectedValuePath="Tag" VerticalContentAlignment="Center">
                                <ComboBoxItem Content="Nazwisko i imię" Tag="l.userfullname"/>
                                <ComboBoxItem Content="Moduł" Tag="l.module"/>
                                <ComboBoxItem Content="Treść" Tag="l.content"/>
                                <ComboBoxItem Content="Data" Tag="l.datetime"/>
                            </ComboBox>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Sortowanie 2:"/>
                            <ToggleButton IsChecked="{Binding sorting_LogsList[3], Source={x:Static p:Settings.Default}, Mode=TwoWay}" Height="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=2.2}" Width="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=2.2}">
                                <Image Margin="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=0.1}" Source="/Resources/icon32_descending.ico"/>
                            </ToggleButton>
                            <ComboBox SelectedValue="{Binding sorting_LogsList[2], Source={x:Static p:Settings.Default}, Mode=TwoWay}" SelectedValuePath="Tag" VerticalContentAlignment="Center">
                                <ComboBoxItem Content="Nazwisko i imię" Tag="l.userfullname"/>
                                <ComboBoxItem Content="Moduł" Tag="l.module"/>
                                <ComboBoxItem Content="Treść" Tag="l.content"/>
                                <ComboBoxItem Content="Data" Tag="l.datetime"/>
                            </ComboBox>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Limit wczytywania:"/>
                            <TextBox Text="{Binding sorting_LogsList[4], Source={x:Static p:Settings.Default}, Mode=TwoWay}" Width="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=5}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
            </MenuItem>
            <!-- Actions -->
            <Separator/>
            <MenuItem Header="Podgląd" Command="g:Commands.Preview">
                <MenuItem.Icon>
                    <Image Source="/Resources/icon32_search.ico"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Dodaj" Command="g:Commands.New">
                <MenuItem.Icon>
                    <Image Source="/Resources/icon32_add.ico"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Duplikuj" Command="g:Commands.Duplicate">
                <MenuItem.Icon>
                    <Image Source="/Resources/icon32_duplicate.ico"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Edytuj" Command="g:Commands.Edit">
                <MenuItem.Icon>
                    <Image Source="/Resources/icon32_edit.ico"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Usuń" Command="g:Commands.Delete">
                <MenuItem.Icon>
                    <Image Source="/Resources/icon32_delete.ico"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Odśwież" Command="g:Commands.Refresh">
                <MenuItem.Icon>
                    <Image Source="/Resources/icon32_refresh.ico"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </DataGrid.ContextMenu>
    <DataGrid.RowStyle>
        <Style TargetType="DataGridRow">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Module}" Value="articles">
                    <Setter Property="Background" Value="{Binding config_Articles_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Module}" Value="attachments">
                    <Setter Property="Background" Value="{Binding config_Attachments_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Module}" Value="attributes_classes">
                    <Setter Property="Background" Value="{Binding config_AttributesClasses_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Module}" Value="contractors">
                    <Setter Property="Background" Value="{Binding config_Contractors_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Module}" Value="distributions">
                    <Setter Property="Background" Value="{Binding config_Distributions_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Module}" Value="documents">
                    <Setter Property="Background" Value="{Binding config_Documents_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Module}" Value="employees">
                    <Setter Property="Background" Value="{Binding config_Employees_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Module}" Value="families">
                    <Setter Property="Background" Value="{Binding config_Families_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Module}" Value="stores">
                    <Setter Property="Background" Value="{Binding config_Stores_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Module}" Value="users">
                    <Setter Property="Background" Value="{Binding config_Users_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </DataGrid.RowStyle>
</DataGrid>
