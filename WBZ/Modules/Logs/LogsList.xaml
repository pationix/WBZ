<local:List x:Class="WBZ.Modules.Logs.LogsList"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WBZ.Modules.Logs"
        xmlns:c="clr-namespace:WBZ.Controls"
        xmlns:g="clr-namespace:WBZ.Globals"
        xmlns:p="clr-namespace:WBZ.Properties"
        mc:Ignorable="d"
        Title="Lista logów" MinHeight="260" MinWidth="390" Height="{Binding Source={x:Static p:Settings.Default}, Path=config_LogsList_WindowSize[1], Mode=TwoWay}" Width="{Binding Source={x:Static p:Settings.Default}, Path=config_LogsList_WindowSize[0], Mode=TwoWay}"
            BorderThickness="6" BorderBrush="#333" ResizeMode="CanResize" WindowStartupLocation="CenterScreen" WindowStyle="None"
            FontFamily="{Binding config_FontFamily, Source={x:Static p:Settings.Default}}" FontSize="{Binding config_iSize, Source={x:Static p:Settings.Default}}"
            Icon="/Resources/icon32_logs.ico" Loaded="Window_Loaded" Closed="Window_Closed"
            FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}">
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0,0,0,1" CornerRadius="0"/>
    </WindowChrome.WindowChrome>
    <Window.CommandBindings>
        <CommandBinding Command="g:Commands.Clear" Executed="cmdClear_Executed"/>
        <CommandBinding Command="g:Commands.Close" Executed="cmdClose_Executed"/>
        <CommandBinding Command="g:Commands.Duplicate" Executed="cmdDuplicate_Executed" CanExecute="cmdDuplicate_CanExecute"/>
        <CommandBinding Command="g:Commands.Edit" Executed="cmdEdit_Executed" CanExecute="cmdEdit_CanExecute"/>
        <CommandBinding Command="g:Commands.Help" Executed="cmdHelp_Executed"/>
        <CommandBinding Command="g:Commands.Preview" Executed="cmdPreview_Executed" CanExecute="cmdPreview_CanExecute"/>
        <CommandBinding Command="g:Commands.Refresh" Executed="cmdRefresh_Executed"/>
    </Window.CommandBindings>
    <DockPanel>
        <!-- titleBar -->
        <c:TitleBar DockPanel.Dock="Top" SubIcon="/Resources/icon32_list.ico"/>
        <!-- buttonsPanel -->
        <Border DockPanel.Dock="Right" Background="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}" BorderBrush="Gray" BorderThickness="1,0,0,0" Visibility="{Binding SelectingMode, Converter={g:conv_BoolInverted}}">
            <DockPanel>
                <ToggleButton x:Name="btnToggle" BorderThickness="0" Width="5" IsChecked="True"/>
                <StackPanel DockPanel.Dock="Top">
                    <c:Button Text="Podgląd&#10;obiektu" Margin="5,5,5,0" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_search.ico" Command="g:Commands.Preview"/>
                    <c:Button Text="Edycja&#10;obiektu" Margin="5,5,5,0" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_edit.ico" Command="g:Commands.Edit"/>
                    <Separator Height="5" Margin="0,5,0,0"/>
                    <CheckBox Content="Logi włączone" x:Name="chckEnabled" Margin="5,5,5,0" Visibility="{Binding IsChecked, ElementName=btnToggle, Converter={g:conv_BoolToVisibility}}" Checked="chckEnabled_Checked" Unchecked="chckEnabled_Checked"/>
                    <Separator Height="5" Margin="0,5,0,0" Visibility="{Binding IsChecked, ElementName=btnToggle, Converter={g:conv_BoolToVisibility}}"/>
                    <c:Button Text="Usuń" Margin="5,5,5,0" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_delete.ico" Command="g:Commands.Delete"/>
                    <Separator DockPanel.Dock="Top" Margin="0,5,0,0" VerticalAlignment="Top" Height="5" Visibility="{Binding IsChecked, ElementName=btnToggle, Converter={g:conv_BoolToVisibility}}"/>
                </StackPanel>
                <StackPanel DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
                    <Separator Height="5" Margin="0,0,0,5"/>
                    <c:Button Text="Odśwież" Margin="5,0,5,5" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_refresh.ico" Command="g:Commands.Refresh"/>
                    <Separator Height="5" Margin="0,0,0,5"/>
                    <c:Button Text="Zamknij okno" Margin="5,0,5,5" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_close.ico" Command="g:Commands.Close"/>
                </StackPanel>
            </DockPanel>
            <Border.ContextMenu>
                <ContextMenu>
                    <c:MenuPanelColor Tag="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                </ContextMenu>
            </Border.ContextMenu>
        </Border>
        <!-- filtersPanel -->
        <Grid DockPanel.Dock="Top" Background="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}">
            <Expander x:Name="filtersExpander" Header="Filtry wyszukiwania" Background="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}" BorderBrush="Gray" BorderThickness="0,0,0,1">
                <DockPanel Margin="5" Background="White">
                    <DockPanel DockPanel.Dock="Top">
                        <Label Content="Sortuj najpierw po:" Margin="2.5" HorizontalContentAlignment="Right" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}, Converter={g:conv_Size}, ConverterParameter=0.25}"/>
                        <ToggleButton Margin="2.5" IsChecked="{Binding sorting_LogsList[1], Source={x:Static p:Settings.Default}, Mode=TwoWay}" Width="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=2}">
                            <Image Source="/Resources/icon32_descending.ico"/>
                        </ToggleButton>
                        <ComboBox Margin="2.5" SelectedValue="{Binding sorting_LogsList[0], Source={x:Static p:Settings.Default}, Mode=TwoWay}" SelectedValuePath="Tag" VerticalContentAlignment="Center">
                            <ComboBoxItem Content="Nazwisko i imię" Tag="l.userfullname"/>
                            <ComboBoxItem Content="Moduł" Tag="l.module"/>
                            <ComboBoxItem Content="Treść" Tag="l.content"/>
                            <ComboBoxItem Content="Data" Tag="l.datetime"/>
                        </ComboBox>
                    </DockPanel>
                    <DockPanel DockPanel.Dock="Top">
                        <Label Content="Sortuj następnie po:" Margin="2.5" HorizontalContentAlignment="Right" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}, Converter={g:conv_Size}, ConverterParameter=0.25}"/>
                        <ToggleButton Margin="2.5" IsChecked="{Binding sorting_LogsList[3], Source={x:Static p:Settings.Default}, Mode=TwoWay}" Width="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=2}">
                            <Image Source="/Resources/icon32_descending.ico"/>
                        </ToggleButton>
                        <ComboBox Margin="2.5" SelectedValue="{Binding sorting_LogsList[2], Source={x:Static p:Settings.Default}, Mode=TwoWay}" SelectedValuePath="Tag" VerticalContentAlignment="Center">
                            <ComboBoxItem Content="Nazwisko i imię" Tag="l.userfullname"/>
                            <ComboBoxItem Content="Moduł" Tag="l.module"/>
                            <ComboBoxItem Content="Treść" Tag="l.content"/>
                            <ComboBoxItem Content="Data" Tag="l.datetime"/>
                        </ComboBox>
                    </DockPanel>
                    <DockPanel DockPanel.Dock="Top">
                        <Label Content="Limit wczytywania:" Margin="2.5" HorizontalContentAlignment="Right" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}, Converter={g:conv_Size}, ConverterParameter=0.25}"/>
                        <TextBox Text="{Binding sorting_LogsList[4], Source={x:Static p:Settings.Default}, Mode=TwoWay}" Margin="2.5" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=5}"/>
                    </DockPanel>
                </DockPanel>
            </Expander>
        </Grid>
        <!-- statusPanel -->
        <c:StatusPanel x:Name="StatusPanel" DockPanel.Dock="Bottom" Background="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}" HasGroups="True"/>
        <!-- groupsView -->
        <c:GroupsView EditingMode="False" Visibility="{Binding EnableGroups, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
        <!-- dataGrid -->
        <DataGrid x:Name="dgList" Margin="5" Padding="5" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" BorderThickness="1"
                  AutoGenerateColumns="False" RowHeaderWidth="0" ItemsSource="{Binding InstancesList}" IsReadOnly="True"
                  MouseDoubleClick="dgList_MouseDoubleClick" ScrollViewer.ScrollChanged="dgList_ScrollChanged">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding ID}" Header="ID" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_ID, Mode=OneWay, Converter={g:conv_BoolToVisibility}}"/>
                <DataGridTextColumn Binding="{Binding UserFullname}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_UserFullname, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <StackPanel>
                            <TextBlock Text="Użytkownik"/>
                            <DockPanel>
                                <ComboBox SelectedIndex="0">
                                    <ComboBoxItem Content="⊃"/>
                                    <ComboBoxItem Content="="/>
                                </ComboBox>
                                <TextBox Text="{Binding DataContext.Filters.UserFullname, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged}" MinWidth="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=8}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Command="g:Commands.Refresh" Key="Return"/>
                                    </TextBox.InputBindings>
                                </TextBox>
                            </DockPanel>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding TranslatedModule}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Module, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <StackPanel>
                            <TextBlock Text="Nazwa modułu"/>
                            <DockPanel>
                                <ComboBox SelectedIndex="0">
                                    <ComboBoxItem Content="⊃"/>
                                    <ComboBoxItem Content="="/>
                                </ComboBox>
                                <TextBox Text="{Binding DataContext.Filters.Module, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged}" MinWidth="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=8}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Command="g:Commands.Refresh" Key="Return"/>
                                    </TextBox.InputBindings>
                                </TextBox>
                            </DockPanel>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Instance}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Obj, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <StackPanel>
                            <TextBlock Text="ID instancji"/>
                            <DockPanel>
                                <ComboBox SelectedIndex="0">
                                    <ComboBoxItem Content="="/>
                                    <ComboBoxItem Content="≠"/>
                                    <ComboBoxItem Content="&#62;"/>
                                    <ComboBoxItem Content="&#60;"/>
                                    <ComboBoxItem Content="≥"/>
                                    <ComboBoxItem Content="≤"/>
                                </ComboBox>
                                <TextBox Text="{Binding DataContext.Filters.Instance, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged}" MinWidth="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=8}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Command="g:Commands.Refresh" Key="Return"/>
                                    </TextBox.InputBindings>
                                </TextBox>
                            </DockPanel>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Content}" Width="*" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Content, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <StackPanel>
                            <TextBlock Text="Treść"/>
                            <DockPanel>
                                <ComboBox SelectedIndex="0">
                                    <ComboBoxItem Content="⊃"/>
                                    <ComboBoxItem Content="="/>
                                </ComboBox>
                                <TextBox Text="{Binding DataContext.Filters.Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged}" MinWidth="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=8}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Command="g:Commands.Refresh" Key="Return"/>
                                    </TextBox.InputBindings>
                                </TextBox>
                            </DockPanel>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding DateTime, StringFormat={}{0:yyyy-MM-dd}}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_DateTime, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <StackPanel>
                            <TextBlock Text="Data i czas"/>
                            <DockPanel>
                                <DatePicker SelectedDate="{Binding DataContext.Filters.fDateTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" MinWidth="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=8}" KeyUp="dpFilter_KeyUp"/>
                                <TextBlock Margin="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=0.25}" Text="/" VerticalAlignment="Center"/>
                                <DatePicker SelectedDate="{Binding DataContext.Filters.DateTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" MinWidth="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=8}" KeyUp="dpFilter_KeyUp"/>
                            </DockPanel>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Widoczność kolumn">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_show.ico"/>
                        </MenuItem.Icon>
                        <MenuItem IsCheckable="True" Header="ID" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_ID, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Użytkownik" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_UserFullname, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Nazwa modułu" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Module, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="ID obiektu" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Obj, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Treść" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Content, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Data i czas" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_DateTime, Mode=TwoWay}"/>
                        <Separator/>
                    </MenuItem>
                    <MenuItem>
                        
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Podgląd" Command="g:Commands.Preview">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_search.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Dodaj" Command="g:Commands.New">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_add.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Duplikuj" Command="g:Commands.Duplicate">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_duplicate.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Edytuj" Command="g:Commands.Edit">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_edit.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Usuń" Command="g:Commands.Delete">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_delete.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Odśwież" Command="g:Commands.Refresh">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_refresh.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Module}" Value="articles">
                            <Setter Property="Background" Value="{Binding config_Articles_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Module}" Value="attachments">
                            <Setter Property="Background" Value="{Binding config_Attachments_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Module}" Value="attributes_classes">
                            <Setter Property="Background" Value="{Binding config_AttributesClasses_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Module}" Value="companies">
                            <Setter Property="Background" Value="{Binding config_Companies_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Module}" Value="distributions">
                            <Setter Property="Background" Value="{Binding config_Distributions_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Module}" Value="documents">
                            <Setter Property="Background" Value="{Binding config_Documents_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Module}" Value="employees">
                            <Setter Property="Background" Value="{Binding config_Employees_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Module}" Value="families">
                            <Setter Property="Background" Value="{Binding config_Families_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Module}" Value="stores">
                            <Setter Property="Background" Value="{Binding config_Stores_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Module}" Value="users">
                            <Setter Property="Background" Value="{Binding config_Users_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
    </DockPanel>
</local:List>
