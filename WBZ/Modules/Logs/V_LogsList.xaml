<b:List x:Class="WBZ.Modules.Logs.LogsList"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:b="clr-namespace:WBZ.Modules.Logs"
        xmlns:c="clr-namespace:WBZ.Controls"
        xmlns:sec="clr-namespace:StswExpress.Controls;assembly=StswExpress"
        xmlns:seg="clr-namespace:StswExpress.Globals;assembly=StswExpress"
        xmlns:p="clr-namespace:WBZ.Properties"
        mc:Ignorable="d"
        Title="Lista logów" MinHeight="260" MinWidth="390" Height="{Binding Source={x:Static p:Settings.Default}, Path=config_LogsList_WindowSize[1], Mode=TwoWay}" Width="{Binding Source={x:Static p:Settings.Default}, Path=config_LogsList_WindowSize[0], Mode=TwoWay}"
            BorderThickness="6" BorderBrush="#333" ResizeMode="CanResize" WindowStartupLocation="CenterScreen" WindowStyle="None"
            FontFamily="{Binding config_FontFamily, Source={x:Static p:Settings.Default}}" FontSize="{Binding Source={x:Static seg:Properties.iSize}}"
            Icon="/Resources/icon32_logs.ico" Loaded="Window_Loaded" Closed="Window_Closed"
            FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}">
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0,0,0,1" CornerRadius="0"/>
    </WindowChrome.WindowChrome>
    <Window.CommandBindings>
        <CommandBinding Command="seg:Commands.Clear" Executed="cmdClear_Executed"/>
        <CommandBinding Command="seg:Commands.Close" Executed="cmdClose_Executed"/>
        <CommandBinding Command="seg:Commands.Duplicate" Executed="cmdDuplicate_Executed" CanExecute="cmdDuplicate_CanExecute"/>
        <CommandBinding Command="seg:Commands.Edit" Executed="cmdEdit_Executed" CanExecute="cmdEdit_CanExecute"/>
        <CommandBinding Command="seg:Commands.Help" Executed="cmdHelp_Executed"/>
        <CommandBinding Command="seg:Commands.Preview" Executed="cmdPreview_Executed" CanExecute="cmdPreview_CanExecute"/>
        <CommandBinding Command="seg:Commands.Refresh" Executed="cmdRefresh_Executed"/>
    </Window.CommandBindings>
    <DockPanel>
        <!-- titleBar -->
        <sec:TitleBar DockPanel.Dock="Top" SubIcon="/Resources/icon32_list.ico"/>
        <!-- buttonsPanel -->
        <Border DockPanel.Dock="Right" Background="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}" BorderBrush="Gray" BorderThickness="1,0,0,0" Visibility="{Binding SelectingMode, Converter={seg:conv_BoolInverted}}">
            <DockPanel>
                <ToggleButton x:Name="btnToggle" BorderThickness="0" Width="5" IsChecked="{Binding config_ShowButtonTexts, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                <StackPanel DockPanel.Dock="Top">
                    <sec:Button Text="Podgląd&#10;obiektu" Margin="5,5,5,0" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_search.ico" Command="seg:Commands.Preview"/>
                    <sec:Button Text="Edycja&#10;obiektu" Margin="5,5,5,0" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_edit.ico" Command="seg:Commands.Edit"/>
                    <Separator Height="5" Margin="0,5,0,0"/>
                    <CheckBox Content="Logi włączone" x:Name="chckEnabled" Margin="5,5,5,0" Visibility="{Binding IsChecked, ElementName=btnToggle, Converter={seg:conv_BoolToVisibility}}" Checked="chckEnabled_Checked" Unchecked="chckEnabled_Checked"/>
                    <Separator Height="5" Margin="0,5,0,0" Visibility="{Binding IsChecked, ElementName=btnToggle, Converter={seg:conv_BoolToVisibility}}"/>
                    <sec:Button Text="Usuń" Margin="5,5,5,0" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_delete.ico" Command="seg:Commands.Delete"/>
                    <Separator DockPanel.Dock="Top" Margin="0,5,0,0" VerticalAlignment="Top" Height="5" Visibility="{Binding IsChecked, ElementName=btnToggle, Converter={seg:conv_BoolToVisibility}}"/>
                </StackPanel>
                <StackPanel DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
                    <Separator Height="5" Margin="0,0,0,5"/>
                    <sec:Button Text="Odśwież" Margin="5,0,5,5" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_refresh.ico" Command="seg:Commands.Refresh"/>
                    <Separator Height="5" Margin="0,0,0,5"/>
                    <sec:Button Text="Zamknij okno" Margin="5,0,5,5" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_close.ico" Command="seg:Commands.Close"/>
                </StackPanel>
            </DockPanel>
            <Border.ContextMenu>
                <ContextMenu>
                    <c:MenuPanelColor Tag="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                </ContextMenu>
            </Border.ContextMenu>
        </Border>
        <!-- statusPanel -->
        <c:StatusPanel x:Name="StatusPanel" DockPanel.Dock="Bottom" Background="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"
                       EnableFilters="True" HasFilters="True" EnableGroups="True" HasGroups="True"/>
        <!-- groupsView -->
        <c:GroupsView EditingMode="False" Visibility="{Binding EnableGroups, ElementName=StatusPanel, Converter={seg:conv_BoolToVisibility}}"/>
        <!-- dataGrid -->
        <b:LogsListGrid x:Name="dgList" ItemsSource="{Binding InstancesList}" IsReadOnly="True" MouseDoubleClick="dgList_MouseDoubleClick" ScrollViewer.ScrollChanged="dgList_ScrollChanged"/>
    </DockPanel>
</b:List>
