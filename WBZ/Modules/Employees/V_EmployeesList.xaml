<b:List x:Class="WBZ.Modules.Employees.EmployeesList"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:b="clr-namespace:WBZ.Modules.Employees"
        xmlns:c="clr-namespace:WBZ.Controls"
        xmlns:g="clr-namespace:WBZ.Globals"
        xmlns:p="clr-namespace:WBZ.Properties"
        mc:Ignorable="d"
        Title="Lista pracowników" MinHeight="260" MinWidth="390" Height="{Binding Source={x:Static p:Settings.Default}, Path=config_EmployeesList_WindowSize[1], Mode=TwoWay}" Width="{Binding Source={x:Static p:Settings.Default}, Path=config_EmployeesList_WindowSize[0], Mode=TwoWay}"
            BorderThickness="6" BorderBrush="#333" ResizeMode="CanResize" WindowStartupLocation="CenterScreen" WindowStyle="None"
            FontFamily="{Binding config_FontFamily, Source={x:Static p:Settings.Default}}" FontSize="{Binding config_iSize, Source={x:Static p:Settings.Default}}"
            Icon="/Resources/icon32_briefcase.ico" Loaded="Window_Loaded" Closed="Window_Closed"
            FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}">
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0,0,0,1" CornerRadius="0"/>
    </WindowChrome.WindowChrome>
    <Window.CommandBindings>
        <CommandBinding Command="g:Commands.Clear" Executed="cmdClear_Executed"/>
        <CommandBinding Command="g:Commands.Close" Executed="cmdClose_Executed"/>
        <CommandBinding Command="g:Commands.Delete" Executed="cmdDelete_Executed" CanExecute="cmdDelete_CanExecute"/>
        <CommandBinding Command="g:Commands.Duplicate" Executed="cmdDuplicate_Executed" CanExecute="cmdDuplicate_CanExecute"/>
        <CommandBinding Command="g:Commands.Edit" Executed="cmdEdit_Executed" CanExecute="cmdEdit_CanExecute"/>
        <CommandBinding Command="g:Commands.Help" Executed="cmdHelp_Executed"/>
        <CommandBinding Command="g:Commands.New" Executed="cmdNew_Executed" CanExecute="cmdNew_CanExecute"/>
        <CommandBinding Command="g:Commands.Preview" Executed="cmdPreview_Executed" CanExecute="cmdPreview_CanExecute"/>
        <CommandBinding Command="g:Commands.Refresh" Executed="cmdRefresh_Executed"/>
    </Window.CommandBindings>
    <DockPanel>
        <!-- titleBar -->
        <c:TitleBar DockPanel.Dock="Top" SubIcon="/Resources/icon32_list.ico"/>
        <!-- buttonsPanel -->
        <Border DockPanel.Dock="Right" Background="{Binding config_Employees_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}" BorderBrush="Gray" BorderThickness="1,0,0,0" Visibility="{Binding SelectingMode, Converter={g:conv_BoolInverted}}">
            <DockPanel>
                <ToggleButton x:Name="btnToggle" BorderThickness="0" Width="5" IsChecked="True"/>
                <StackPanel DockPanel.Dock="Top">
                    <c:Button Text="Podgląd" Margin="5,5,5,0" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_search.ico" Command="g:Commands.Preview"/>
                    <c:Button Text="Dodaj" Margin="5,5,5,0" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_add.ico" Command="g:Commands.New"/>
                    <c:Button Text="Duplikuj" Margin="5,5,5,0" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_duplicate.ico" Command="g:Commands.Duplicate"/>
                    <c:Button Text="Edytuj" Margin="5,5,5,0" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_edit.ico" Command="g:Commands.Edit"/>
                    <c:Button Text="Usuń" Margin="5,5,5,0" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_delete.ico" Command="g:Commands.Delete"/>
                    <Separator Height="5" Margin="0,5,0,0"/>
                </StackPanel>
                <StackPanel DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
                    <Separator Height="5" Margin="0,0,0,5"/>
                    <c:Button Text="Odśwież" Margin="5,0,5,5" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_refresh.ico" Command="g:Commands.Refresh"/>
                    <Separator Height="5" Margin="0,0,0,5"/>
                    <c:Button Text="Zamknij okno" Margin="5,0,5,5" TextVisibility="{Binding IsChecked, ElementName=btnToggle}" Icon="/Resources/icon32_close.ico" Command="g:Commands.Close"/>
                </StackPanel>
            </DockPanel>
            <Border.ContextMenu>
                <ContextMenu>
                    <c:MenuPanelColor Tag="{Binding config_Employees_PanelColor, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                </ContextMenu>
            </Border.ContextMenu>
        </Border>
        <!-- statusPanel -->
        <c:StatusPanel x:Name="StatusPanel" DockPanel.Dock="Bottom" Background="{Binding config_Employees_PanelColor, Source={x:Static p:Settings.Default}, Mode=OneWay}"
                       EnableFilters="True" HasFilters="True" EnableGroups="True" HasGroups="True"/>
        <!-- groupsView -->
        <c:GroupsView EditingMode="{Binding Source={x:Static g:Global.User}, Path=Perms, Converter={g:conv_ListContains}, ConverterParameter=employees_save}" Visibility="{Binding EnableGroups, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
        <!-- otherFilters -->
        <DockPanel DockPanel.Dock="Bottom" Visibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}">
            <CheckBox Margin="5,0,5,5" Content="Pokaż archiwalne" IsChecked="{Binding Filters.Archival}" HorizontalAlignment="Right" VerticalContentAlignment="Center"/>
        </DockPanel>
        <!-- dataGrid -->
        <c:DataGrid x:Name="dgList" ItemsSource="{Binding InstancesList}" IsReadOnly="True" MouseDoubleClick="dgList_MouseDoubleClick" ScrollViewer.ScrollChanged="dgList_ScrollChanged">
            <DataGrid.Resources>
                <g:BindingProxy x:Key="proxy" Data="{Binding}"/>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <!-- ID -->
                <DataGridTextColumn Binding="{Binding ID}" Header="ID" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_ID, Mode=OneWay, Converter={g:conv_BoolToVisibility}}"/>
                <!-- Icon -->
                <DataGridTemplateColumn MaxWidth="50" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Icon, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding Icon}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Fullname -->
                <DataGridTextColumn Binding="{Binding Fullname}" Width="*" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Fullname, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <c:DataGridColumnFilter_Text Text="Nazwisko" Value="{Binding Data.Filters.Lastname, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Department -->
                <DataGridTextColumn Binding="{Binding Department}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Department, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <c:DataGridColumnFilter_Text Text="Dział" Value="{Binding Data.Filters.Department, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Position -->
                <DataGridTextColumn Binding="{Binding Position}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Position, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <c:DataGridColumnFilter_Text Text="Stanowisko" Value="{Binding Data.Filters.Position, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Email -->
                <DataGridTextColumn Binding="{Binding Email}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Email, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <c:DataGridColumnFilter_Text Text="E-mail" Value="{Binding Data.Filters.Email, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Phone -->
                <DataGridTextColumn Binding="{Binding Phone}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Phone, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <c:DataGridColumnFilter_Text Text="Telefon" Value="{Binding Data.Filters.Phone, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Postcode -->
                <DataGridTextColumn Binding="{Binding Postcode}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Postcode, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <c:DataGridColumnFilter_Text Text="Kod pocztowy" Value="{Binding Data.Filters.Postcode, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- City -->
                <DataGridTextColumn Binding="{Binding City}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_City, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <c:DataGridColumnFilter_Text Text="Miejscowość" Value="{Binding Data.Filters.City, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Address -->
                <DataGridTextColumn Binding="{Binding Address}" Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Address, Mode=OneWay, Converter={g:conv_BoolToVisibility}}">
                    <DataGridTextColumn.Header>
                        <c:DataGridColumnFilter_Text Text="Adres" Value="{Binding Data.Filters.Address, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}" FilterVisibility="{Binding EnableFilters, ElementName=StatusPanel, Converter={g:conv_BoolToVisibility}}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <!-- Columns -->
                    <MenuItem Header="Widoczność kolumn">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_show.ico"/>
                        </MenuItem.Icon>
                        <MenuItem IsCheckable="True" Header="ID" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_ID, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Ikona" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Icon, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Nazwisko" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Fullname, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Dział" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Department, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Stanowisko" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Position, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="E-mail" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Email, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Telefon" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Phone, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Kod pocztowy" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Postcode, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Miejscowość" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_City, Mode=TwoWay}"/>
                        <MenuItem IsCheckable="True" Header="Adres" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_EmployeesList_Address, Mode=TwoWay}"/>
                    </MenuItem>
                    <!-- Sorting -->
                    <MenuItem Header="Sortowanie danych">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_descending.ico"/>
                        </MenuItem.Icon>
                        <MenuItem>
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Sortowanie 1:"/>
                                    <ToggleButton IsChecked="{Binding sorting_EmployeesList[1], Source={x:Static p:Settings.Default}, Mode=TwoWay}" Height="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=2.2}" Width="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=2.2}">
                                        <Image Margin="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=0.1}" Source="/Resources/icon32_descending.ico"/>
                                    </ToggleButton>
                                    <ComboBox SelectedValue="{Binding sorting_EmployeesList[0], Source={x:Static p:Settings.Default}, Mode=TwoWay}" SelectedValuePath="Tag" VerticalContentAlignment="Center">
                                        <ComboBoxItem Content="Imię" Tag="e.forename"/>
                                        <ComboBoxItem Content="Nazwisko" Tag="e.lastname"/>
                                        <ComboBoxItem Content="E-mail" Tag="e.email"/>
                                        <ComboBoxItem Content="Telefon" Tag="e.phone"/>
                                    </ComboBox>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem>
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Sortowanie 2:"/>
                                    <ToggleButton IsChecked="{Binding sorting_EmployeesList[3], Source={x:Static p:Settings.Default}, Mode=TwoWay}" Height="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=2.2}" Width="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=2.2}">
                                        <Image Margin="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=0.1}" Source="/Resources/icon32_descending.ico"/>
                                    </ToggleButton>
                                    <ComboBox SelectedValue="{Binding sorting_EmployeesList[2], Source={x:Static p:Settings.Default}, Mode=TwoWay}" SelectedValuePath="Tag" VerticalContentAlignment="Center">
                                        <ComboBoxItem Content="Imię" Tag="e.forename"/>
                                        <ComboBoxItem Content="Nazwisko" Tag="e.lastname"/>
                                        <ComboBoxItem Content="E-mail" Tag="e.email"/>
                                        <ComboBoxItem Content="Telefon" Tag="e.phone"/>
                                    </ComboBox>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem>
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Limit wczytywania:"/>
                                    <TextBox Text="{Binding sorting_EmployeesList[4], Source={x:Static p:Settings.Default}, Mode=TwoWay}" Width="{Binding config_iSize, Source={x:Static p:Settings.Default}, Converter={g:conv_Size}, ConverterParameter=5}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>
                    <!-- Actions -->
                    <Separator/>
                    <MenuItem Header="Podgląd" Command="g:Commands.Preview">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_search.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Dodaj" Command="g:Commands.New">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_add.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Duplikuj" Command="g:Commands.Duplicate">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_duplicate.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Edytuj" Command="g:Commands.Edit">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_edit.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Usuń" Command="g:Commands.Delete">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_delete.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Odśwież" Command="g:Commands.Refresh">
                        <MenuItem.Icon>
                            <Image Source="/Resources/icon32_refresh.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Archival}" Value="True">
                            <Setter Property="Foreground" Value="Gray"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Comment, Converter={g:conv_CompareStrings}}" Value="False">
                            <Setter Property="ToolTip" Value="{Binding Comment}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </c:DataGrid>
    </DockPanel>
</b:List>
